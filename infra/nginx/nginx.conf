events {

}

error_log /var/log/nginx/access.log debug;

http {
    server {
        listen       80;
        listen  [::]:80;
        server_name  localhost;

        resolver 127.0.0.11 valid=30s ipv6=off;

        #listen 443 ssl http2;
        #server_name www.logotipiwe.ru;
        #ssl_certificate /etc/ssl/nginx_certs/logotipiwe.ru.crt;
        #ssl_certificate_key /etc/ssl/nginx_certs/private.key;

        #ssl_trusted_certificate /etc/ssl/nginx_certs/chain.crt;

        #location ^~ /node {
        #    return 302 /node/;
        #}

        #service knows it's subfolder 'kb_back_service' and MUST HANDLE it
        location ^~ /kb_back_service {
            set $KB_BACK_SER http://kb_back:80;
            proxy_pass $KB_BACK_SER;
            proxy_set_header HOST $host;
        }

        location ^~ /keepbalancevk/ {
            set $KB_FRONT_SER http://kb_front:80;
            proxy_pass $KB_FRONT_SER;
            proxy_set_header HOST $host;
        }

        #service doesn't know it's subfolder
        location ^~ /comments_back {
            set $COMMENTS_SER http://comments_back:80;
            rewrite ^/comments_back/(.*) /$1 break;
            rewrite ^/comments_back(.*) /$1 break;
            proxy_pass $COMMENTS_SER;
            proxy_set_header HOST $host;
        }

#       CONFIG SERVER
        location ^~ /config_server {
            set $SER_URL http://config_server:80;
            rewrite ^([^(.)]*[^/])$ $1/ permanent;
            rewrite ^/config_server(.*)$ $1 break;

            proxy_pass $SER_URL;
            proxy_set_header HOST $host;
        }

        location ^~ /config_server/api {
            set $SER_URL http://config_server:80;
            rewrite ^/config_server/(.*) /$1 break;
            rewrite ^/config_server(.*)$ $1 break;

            proxy_pass $SER_URL;
            proxy_set_header HOST $host;
        }
#       END CONFIG SERVER

        location ^~ /oauth2 {
            set $SER_URL http://idp:80;
            rewrite ^/oauth2/(.*) /$1 break;
            rewrite ^/oauth2(.*)$ $1 break;

            proxy_pass $SER_URL;
            proxy_set_header HOST $host;
        }

        location ^~ /pixel-battle-back {
            set $SER_URL http://pixel_battle_back:80;
            rewrite ^/pixel-battle-back/(.*) /$1 break;
            rewrite ^/pixel-battle-back(.*)$ $1 break;

            proxy_pass $SER_URL;
            proxy_set_header HOST $host;
        }

        location ^~ /pixel-battle-back/api/socket {
            set $SER_URL http://pixel_battle_back:80;
            rewrite ^/pixel-battle-back/(.*) /$1 break;
            rewrite ^/pixel-battle-back(.*)$ $1 break;

            proxy_pass $SER_URL;
            proxy_set_header HOST $host;
            proxy_http_version 1.1;
           proxy_set_header Upgrade $http_upgrade;
           proxy_set_header Connection "upgrade";
        }

        location ^~ /pixel-battle {
            set $SER_URL http://pixel_battle_front:80;
            rewrite ^/pixel-battle$ / break;
            rewrite ^/pixel-battle/(.*) /$1 break;
            rewrite ^/pixel-battle(.*)$ $1 break;

            proxy_pass $SER_URL;
            proxy_set_header HOST $host;
        }

        location / {
            set $SER http://index_front:80;
            proxy_pass $SER;
            proxy_set_header HOST $host;
        }
    }
}

