events {

}

error_log /var/log/nginx/access.log debug;

http {
    server {
        listen       80;
        listen  [::]:80;
        server_name  localhost;

        resolver 127.0.0.11 valid=30s ipv6=off;

        listen 443 ssl http2;
        server_name logotipiwe.ru;
        ssl_certificate /etc/nginx/ssl/logotipiwe.ru.crt;
        ssl_certificate_key /etc/nginx/ssl/logotipiwe.ru.key;

        #ssl_trusted_certificate /etc/ssl/nginx_certs/chain.crt;

        #location ^~ /node {
        #    return 302 /node/;
        #}

        #service knows it's subfolder 'kb_back_service' and MUST HANDLE it
        location ^~ /kb_back_service {
            set $KB_BACK_SER http://kb_back:80;
            proxy_pass $KB_BACK_SER;
            proxy_set_header HOST $host;
        }

        location ^~ /keepbalancevk/ {
            set $KB_FRONT_SER http://kb_front:80;
            proxy_pass $KB_FRONT_SER;
            proxy_set_header HOST $host;
        }

        #service doesn't know it's subfolder
        location ^~ /comments_back {
            set $COMMENTS_SER http://comments_back:80;
            rewrite ^/comments_back/(.*) /$1 break;
            rewrite ^/comments_back(.*) /$1 break;
            proxy_pass $COMMENTS_SER;
            proxy_set_header HOST $host;
        }

#       CONFIG SERVER
        location ^~ /config_server {
            set $SER_URL http://config_server:80;
            rewrite ^([^(.)]*[^/])$ $1/ permanent;
            rewrite ^/config_server(.*)$ $1 break;

            proxy_pass $SER_URL;
            proxy_set_header HOST $host;
        }

        location ^~ /config_server/api {
            set $SER_URL http://config_server:80;
            rewrite ^/config_server/(.*) /$1 break;
            rewrite ^/config_server(.*)$ $1 break;

            proxy_pass $SER_URL;
            proxy_set_header HOST $host;
        }
#       END CONFIG SERVER

        location ^~ /oauth2 {
            set $SER_URL http://idp:80;
            rewrite ^/oauth2/(.*) /$1 break;
            rewrite ^/oauth2(.*)$ $1 break;

            proxy_pass $SER_URL;
            proxy_set_header HOST $host;
        }

        location ^~ /haur/api/v1/question {
            set $SER http://honest:80;
            rewrite ^/haur/(.*) /$1 break;
            rewrite ^/haur(.*) /$1 break;
            proxy_pass $SER;
            proxy_set_header HOST $host;
        }

        location ^~ /haur {
            set $SER http://haur:80;
            rewrite ^/haur/(.*) /$1 break;
            rewrite ^/haur(.*) /$1 break;
            proxy_pass $SER;
            proxy_set_header HOST $host;
        }

        location ^~ /honest-be {
            set $SER http://honest-be:80;
            rewrite ^/honest-be/(.*) /$1 break;
            rewrite ^/honest-be(.*) /$1 break;
            proxy_pass $SER;
            proxy_set_header HOST $host;
        }

        location ^~ /honest {
            set $SER http://honest:80;
            rewrite ^/honest/(.*) /$1 break;
            rewrite ^/honest(.*) /$1 break;
            proxy_pass $SER;
            proxy_set_header HOST $host;
        }

        location ^~ /.well-known {
            root /etc/nginx/well-known;
        }

        # n8n automation platform
        location ^~ /n8n {
            set $N8N_SER http://n8n:5678;
            rewrite ^/n8n/(.*) /$1 break;
            rewrite ^/n8n$ / break;
            
            proxy_pass $N8N_SER;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header HOST $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Real-IP $remote_addr;
            
            # Fix for n8n >= 1.87.0 "Invalid origin!" error
            proxy_set_header Origin 'https://logotipiwe.ru';
            
            # WebSocket support for n8n
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            
            # Timeouts for long-running workflows
            proxy_connect_timeout 300s;
            proxy_send_timeout 300s;
            proxy_read_timeout 300s;
            
            # Increase client body size for n8n workflow imports
            client_max_body_size 100M;
        }

        # Redirect /workflow.* to /n8n/workflow.*
        location ~ ^/workflow(.*)$ {
            return 301 /n8n/workflow$1;
        }

        location / {
            set $SER http://index_front:80;
            proxy_pass $SER;
            proxy_set_header HOST $host;
        }
    }

    server {
        resolver 127.0.0.11 valid=30s ipv6=off;

        listen 443 ssl http2;
        server_name n8n-test.logotipiwe.ru;
        ssl_certificate /etc/nginx/ssl/all.logotipiwe.ru/fullchain.pem;
        ssl_certificate_key /etc/nginx/ssl/all.logotipiwe.ru/privkey.pem;

        location / {
            return 200 'eea';
        }
    }

    server {
        resolver 127.0.0.11 valid=30s ipv6=off;

        listen 443 ssl http2;
        server_name n8n.logotipiwe.ru;
        ssl_certificate /etc/nginx/ssl/all.logotipiwe.ru/fullchain.pem;
        ssl_certificate_key /etc/nginx/ssl/all.logotipiwe.ru/privkey.pem;

        location / {
            return 200 'кулео';
        }
    }
}
